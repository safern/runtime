trigger: none

pr:
  branches:
    include:
    - master
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - docs/*
    - CODE-OF-CONDUCT.md
    - CONTRIBUTING.md
    - LICENSE.TXT
    - PATENTS.TXT
    - README.md
    - SECURITY.md
    - THIRD-PARTY-NOTICES.TXT

jobs:
#
# Checkout repository
#
- template: /eng/pipelines/common/checkout-job.yml
  parameters:
    paths:
    - subset: coreclr
      include:
      - src/libraries/System.Private.CoreLib/*
      exclude:
      - '*.md'
      - LICENSE.TXT
      - PATENTS.TXT
      - THIRD-PARTY-NOTICES.TXT
      - docs/*
      - src/installer/*
      - src/libraries/*
      - eng/pipelines/installer/*
      - eng/pipelines/libraries/*
    - subset: libraries
      exclude:
      - '*.md'
      - LICENSE.TXT
      - PATENTS.TXT
      - THIRD-PARTY-NOTICES.TXT
      - docs/*
      - src/installer/*
      - src/coreclr/*
      - eng/pipelines/coreclr/*
      - eng/pipelines/installer/*
    - subset: installer
      include:
      - docs/manpages/*
      exclude:
      - '*.md'
      - LICENSE.TXT
      - PATENTS.TXT
      - THIRD-PARTY-NOTICES.TXT
      - docs/*
      - src/coreclr/*
      - src/libraries/*
      - eng/pipelines/coreclr/*
      - eng/pipelines/libraries/*

#
# Build CoreCLR checked
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
    buildConfig: checked
    platforms:
    - OSX_x64
    - Linux_x64
    - Linux_arm
    - Linux_arm64
    - Linux_musl_x64
    - Windows_NT_x86
    - Windows_NT_x64
    - Windows_NT_arm
    - Windows_NT_arm64
    jobParameters:
      testGroup: innerloop
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)


#
# Build CoreCLR release
# Only when CoreCLR is changed
# Always as they are needed by Installer and we always build and test the Installer.
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
    buildConfig: release
    platforms:
    - OSX_x64
    - Linux_x64
    - Linux_arm
    - Linux_arm64
    - Linux_musl_x64
    - Linux_musl_arm64
    - Windows_NT_x64
    - Windows_NT_x86
    - Windows_NT_arm
    - Windows_NT_arm64
    jobParameters:
      testGroup: innerloop

#
# Build CoreCLR Formatting Job
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/format-job.yml
    platforms:
    - Linux_x64
    - Windows_NT_x64
    jobParameters:
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

#
# Build libraries using live CoreLib
# These set of libraries are built always no matter what changed
# The reason for that is because Corelib and Installer needs it and
# These are part of the test matrix for Libraries changes.
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: Release
    platforms:
    - Linux_arm
    - Linux_musl_arm64
    - Windows_NT_arm
    - Windows_NT_arm64
    - Windows_NT_x86
    jobParameters:
      liveCoreClrBuildConfig: release

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: Debug
    platforms:
    - Linux_arm64
    - Linux_musl_x64
    - Linux_x64
    - OSX_x64
    - Windows_NT_x64
    jobParameters:
      liveCoreClrBuildConfig: release
#
# Libraries Build that only run when libraries is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: Debug
    platforms:
    - WebAssembly_wasm
    jobParameters:
      framework: netcoreapp
      liveCoreClrBuildConfig: release
      condition: eq(dependencies.checkout.outputs['SetPathVars_libraries.containsChange'], true)

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: Release
    platforms:
    - Windows_NT_x86
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    jobParameters:
      isFullMatrix: false
      framework: netfx
      runTests: true
      testScope: innerloop
      condition: eq(dependencies.checkout.outputs['SetPathVars_libraries.containsChange'], true)

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: Release
    platforms:
    - Windows_NT_x64
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    jobParameters:
      isFullMatrix: false
      framework: allConfigurations
      runTests: true
      liveCoreClrBuildConfig: release
      condition: eq(dependencies.checkout.outputs['SetPathVars_libraries.containsChange'], true)

#
# Libraries Test Build
# Only when CoreCLR or Libraries is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-test-job.yml
    buildConfig: Debug
    platforms:
    - OSX_x64
    - Linux_x64
    - Windows_NT_x64
    jobParameters:
      isOfficialBuild: false
      liveCoreClrBuildConfig: release
      testScope: innerloop
      condition: or(eq(dependencies.checkout.outputs['SetPathVars_libraries.containsChange'], true), eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true))

#
# Crossgen-comparison jobs
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/crossgen-comparison-job.yml
    buildConfig: checked
    platforms:
    - Linux_arm
    helixQueueGroup: pr
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    jobParameters:
      liveLibrariesBuildConfig: Release
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

#
# CoreCLR Test builds using live libraries release build
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-test-job.yml
    buildConfig: checked
    platforms:
    - Linux_arm 
    - Windows_NT_x86
    - Windows_NT_arm
    - Windows_NT_arm64
    jobParameters:
      testGroup: innerloop
      liveLibrariesBuildConfig: Release
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

#
# CoreCLR Test builds using live libraries debug build
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-test-job.yml
    buildConfig: checked
    platforms:
    - OSX_x64
    - Linux_x64
    - Windows_NT_x64
    jobParameters:
      testGroup: innerloop
      liveLibrariesBuildConfig: Debug
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

#
# CoreCLR Test executions using live libraries release build
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/run-test-job.yml
    buildConfig: checked
    platforms:
    - Linux_arm
    - Windows_NT_x86
    # - Windows_NT_arm return this when https://github.com/dotnet/runtime/issues/1097 is fixed.
    - Windows_NT_arm64
    helixQueueGroup: pr
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    jobParameters:
      testGroup: innerloop
      liveLibrariesBuildConfig: Release
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

#
# CoreCLR Test executions using live libraries debug build
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/run-test-job.yml
    buildConfig: checked
    platforms:
    - OSX_x64
    - Linux_x64
    - Windows_NT_x64
    helixQueueGroup: pr
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    jobParameters:
      testGroup: innerloop
      liveLibrariesBuildConfig: Debug
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

#
# Libraries Release Test Execution against a release runtime
# Only when the PR contains a libraries change
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/run-test-job.yml
    buildConfig: Release
    platforms:
    - Windows_NT_x86
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    jobParameters:
      isOfficialBuild: false
      isFullMatrix: false
      framework: netcoreapp
      testScope: innerloop
      liveCoreClrBuildConfig: release
      dependsOnTestBuildConfiguration: Debug
      dependsOnTestArchitecture: x64
      condition: eq(dependencies.checkout.outputs['SetPathVars_libraries.containsChange'], true)

#
# Libraries Debug Test Execution against a release runtime
# Only when the PR contains a libraries change
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/run-test-job.yml
    buildConfig: Debug
    platforms:
    - Windows_NT_x64
    - OSX_x64
    - Linux_x64
    - Linux_musl_x64
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    jobParameters:
      isOfficialBuild: false
      isFullMatrix: false
      framework: netcoreapp
      testScope: innerloop
      liveCoreClrBuildConfig: release
      dependsOnTestBuildConfiguration: Debug
      dependsOnTestArchitecture: x64
      condition: eq(dependencies.checkout.outputs['SetPathVars_libraries.containsChange'], true)

#
# Libraries Test Execution against a checked runtime
# Only when the PR contains a coreclr change
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/run-test-job.yml
    buildConfig: Release
    platforms:
    - Windows_NT_x86
    # - Windows_NT_arm return this when https://github.com/dotnet/runtime/issues/1097 is fixed.
    # - Windows_NT_arm64 only on internal
    - Linux_arm
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    helixQueueGroup: libraries
    jobParameters:
      framework: netcoreapp
      testScope: innerloop
      liveCoreClrBuildConfig: checked
      dependsOnTestBuildConfiguration: Debug
      dependsOnTestArchitecture: x64
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/run-test-job.yml
    buildConfig: Debug
    platforms:
    - Windows_NT_x64
    - OSX_x64
    - Linux_x64
    - Linux_musl_x64
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    helixQueueGroup: libraries
    jobParameters:
      framework: netcoreapp
      testScope: innerloop
      liveCoreClrBuildConfig: checked
      dependsOnTestBuildConfiguration: Debug
      dependsOnTestArchitecture: x64
      condition: eq(dependencies.checkout.outputs['SetPathVars_coreclr.containsChange'], true)

# #
# # Installer Build and Test
# #
# - template: /eng/pipelines/installer/installer-matrix.yml
#   parameters:
#     liveCoreClrBuildConfig: checked
#     liveLibrariesBuildConfig: Release
#     skipPlatforms:
#     # Not built by CoreCLR and Libraries yet.
#     - Linux_arm64
#     - Linux_musl_x64
#     - Linux_musl_arm64
